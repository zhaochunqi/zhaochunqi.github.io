<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Alex Coding]]></title>
  <subtitle><![CDATA[你有没有想过，这辈子可能都是个普通人？]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.zhaochunqi.com/"/>
  <updated>2015-11-25T20:06:49.294Z</updated>
  <id>http://blog.zhaochunqi.com/</id>
  
  <author>
    <name><![CDATA[Alex Zhao]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[YAML 简介]]></title>
    <link href="http://blog.zhaochunqi.com/2015/11/26/yaml/"/>
    <id>http://blog.zhaochunqi.com/2015/11/26/yaml/</id>
    <published>2015-11-26T02:41:00.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p><code>YAML</code> <strong>[YAML Ain’t Markup Language]</strong></p>
<p>和 GNU 一样，YAML 是一个递归着说“不”的名字。不同的是，GNU 对 UNIX 说不，YAML 说不的对象是 XML。</p>
<a id="more"></a>
<p><img src="http://harchiko.qiniudn.com/3389850854144361888.jpeg" alt="image"></p>
<h2 id="语法">语法 </h2><p><code>Structure</code> 通过 <strong> 空格 </strong> 来展示。<code>Sequence</code>里的项用”-“来代表，<code>Map</code>里的键值对用”:”分隔.<br>这几乎就是所有的语法了.</p>
<blockquote>
<p>注意是空格不是 <code>TAB</code>, <code>Makefile</code> 刚好相反。</p>
</blockquote>
<h2 id="举例">举例</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name: John Smith&#10;age: 37&#10;spouse:&#10;    name: Jane Smith&#10;    age: 25&#10;children:&#10;    -   name: Jimmy Smith&#10;        age: 15&#10;    -   name: Jenny Smith&#10;        age: 12</span><br></pre></td></tr></table></figure>
<p>John 今年 37 岁，有一个幸福的四口之家。两个孩子 Jimmy 和 Jenny 活泼可爱。妻子 Jane 年轻美貌。<br>可见 YAML 的可读性是不错。</p>
<p>顺便推荐下在线 yaml 解析器：<a href="http://yaml-online-parser.appspot.com/" target="_blank" rel="external">http://yaml-online-parser.appspot.com/</a></p>
<p>参考链接： <a href="http://www.ibm.com/developerworks/cn/xml/x-cn-yamlintro/" target="_blank" rel="external">http://www.ibm.com/developerworks/cn/xml/x-cn-yamlintro/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>YAML</code> <strong>[YAML Ain’t Markup Language]</strong></p>
<p>和GNU一样，YAML是一个递归着说“不”的名字。不同的是，GNU对UNIX说不，YAML说不的对象是XML。</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[添加一个随机的 Git 提交说明]]></title>
    <link href="http://blog.zhaochunqi.com/2015/11/26/random-git-commit/"/>
    <id>http://blog.zhaochunqi.com/2015/11/26/random-git-commit/</id>
    <published>2015-11-26T02:30:00.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p><strong> 代码 </strong>:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"<span class="variable">$(curl -s http://whatthecommit.com/ | awk'/&lt;p&gt;/ &#123;sub("&lt;p&gt;", "")</span>; print &#125;')"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p> 适用于不是很重要的项目中的提交说明，工作中慎用。</p>
<p><img src="http://harchiko.qiniudn.com/Screen%20Shot%202015-11-26%20at%202.33.14%20AM.png" alt="image"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong> 代码 </strong>:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"<span class="variable">$(curl -s http://whatthecommit.com/ | awk '/&lt;p&gt;/ &#123;sub("&lt;p&gt;", "")</span>; print &#125;')"</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="git" scheme="http://blog.zhaochunqi.com/tags/git/"/>
    
      <category term="snippets" scheme="http://blog.zhaochunqi.com/tags/snippets/"/>
    
      <category term="snippets" scheme="http://blog.zhaochunqi.com/categories/snippets/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[扩充 Mac 原生字典库]]></title>
    <link href="http://blog.zhaochunqi.com/2015/11/25/extends-mac-dict-apps/"/>
    <id>http://blog.zhaochunqi.com/2015/11/25/extends-mac-dict-apps/</id>
    <published>2015-11-25T01:46:00.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>DictUnifer 是一款在 Mac 下能够转换字典格式的软件。把第三方的词库转换成「Mac 词典」支持的格式。</p>
<a id="more"></a>
<p><img src="http://harchiko.qiniudn.com/Screen%20Shot%202015-11-25%20at%201.39.29%20AM.png" alt=""></p>
<p> 使用方法也是非常简便：拖动 stardic 的字典文件上去即可 </p>
<p><img src="http://harchiko.qiniudn.com/Dictunifier.gif" alt=""></p>
<p> 另外，字典下载地址： <a href="http://abloz.com/huzheng/stardict-dic/" target="_blank" rel="external">http://abloz.com/huzheng/stardict-dic/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>DictUnifer是一款在Mac下能够转换字典格式的软件。把第三方的词库转换成「Mac词典」支持的格式。</p>]]>
    
    </summary>
    
      <category term="mac" scheme="http://blog.zhaochunqi.com/tags/mac/"/>
    
      <category term="soft" scheme="http://blog.zhaochunqi.com/tags/soft/"/>
    
      <category term="soft" scheme="http://blog.zhaochunqi.com/categories/soft/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Faker.js]]></title>
    <link href="http://blog.zhaochunqi.com/2015/08/24/faker-js/"/>
    <id>http://blog.zhaochunqi.com/2015/08/24/faker-js/</id>
    <published>2015-08-24T08:05:30.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>Faker.js 能够生成名字、地址、电话号码等信息的库。<br><a id="more"></a></p>
<p> 项目地址： <a href="https://github.com/Marak/faker.js" target="_blank" rel="external">https://github.com/Marak/faker.js</a></p>
<p> 使用方法比较简单：</p>
<ul>
<li> 浏览器中 </li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src = <span class="string">"faker.js"</span> type = <span class="string">"text/javascript"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="actionscript"></span><br><span class="line">  <span class="keyword">var</span> randomName = faker.name.findName(); <span class="comment">// Caitlyn Kerluke</span></span><br><span class="line">  <span class="keyword">var</span> randomEmail = faker.internet.email(); <span class="comment">// Rusty@arne.info</span></span><br><span class="line">  <span class="keyword">var</span> randomCard = faker.helpers.createCard(); <span class="comment">// random contact card containing many properties</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ar faker = <span class="built_in">require</span>(<span class="string">'faker'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> randomName = faker.name.findName(); <span class="comment">// Rowan Nikolaus</span></span><br><span class="line"><span class="keyword">var</span> randomEmail = faker.internet.email(); <span class="comment">// Kassandra.Haley@erich.biz</span></span><br><span class="line"><span class="keyword">var</span> randomCard = faker.helpers.createCard(); <span class="comment">// random contact card containing many properties</span></span><br></pre></td></tr></table></figure>
<p>Faker 的 API 中包含了大量的方法，并且，有针对本地化的语言生成可以使用 <code>faker.locale = &#39;zh_CN&#39;</code>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Faker.js 能够生成名字、地址、电话号码等信息的库。<br>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://blog.zhaochunqi.com/tags/javascript/"/>
    
      <category term="node" scheme="http://blog.zhaochunqi.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 supervisor 来管理 linux 程序]]></title>
    <link href="http://blog.zhaochunqi.com/2015/03/04/use-supervisor-to-manager-your-task/"/>
    <id>http://blog.zhaochunqi.com/2015/03/04/use-supervisor-to-manager-your-task/</id>
    <published>2015-03-04T05:45:39.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<h2 id="supervisor 简介"><code>supervisor</code>简介</h2><p>supervisor 是使用 python 语言编写的可以监控和控制系统类 unix 进程的程序，类似于 ruby 的 god 。</p>
<a id="more"></a>
<h2 id="安装">安装 </h2><p><code>supervisor</code> 是 python 编写，安装十分简便，只需：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$: easy_install supervisor</span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2><p>supervisor 可以使用配置文件来启动，指定参数 -c , 默认位置使用<br>-help 查看。</p>
<p>建立 <code>supervisord.conf</code> 配置文件。</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[program:cow]</span></span><br><span class="line"><span class="setting">command = <span class="value">nohup  /home/harchiko/cow/cow &amp;</span></span></span><br><span class="line"><span class="setting">autostart = <span class="value"><span class="keyword">true</span></span></span></span><br><span class="line"><span class="setting">autorestart = <span class="value"><span class="keyword">true</span></span></span></span><br><span class="line"><span class="title">[supervisord]</span></span><br></pre></td></tr></table></figure>
<p>这是用来监控 <code>cow</code> 的文件。</p>
<p>如果提示</p>
<p><code>Error: could not find config file supervisord.</code></p>
<p>那是因为缺少 <code>[supervisord]</code> 模块，如上述配置文件中添加即可。</p>
<h2 id="启动">启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisord -c supervisord.conf</span><br></pre></td></tr></table></figure>
<p>如是启动即可。</p>
<p>注意，如果想要自动重启务必加上 <code>autorestart = true</code></p>
<p>另外，supervisor 还有交互式命令 supervisorcli , 输入 help 查看即可了解如何操作。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="supervisor简介"><code>supervisor</code>简介</h2><p>supervisor 是使用python语言编写的可以监控和控制系统类unix进程的程序，类似于ruby 的 god 。</p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
      <category term="python" scheme="http://blog.zhaochunqi.com/tags/python/"/>
    
      <category term="supervisor" scheme="http://blog.zhaochunqi.com/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[实用 Linux 命令]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/26/most-useful-bash-commands/"/>
    <id>http://blog.zhaochunqi.com/2015/02/26/most-useful-bash-commands/</id>
    <published>2015-02-26T02:47:38.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>介绍几个常用的 Linux 命令行技巧命令，以期提高工作效率。</p>
<a id="more"></a>
<ol>
<li><p><code>$ sudo !!</code></p>
<p> 以 root 用户来运行上一次的命令。【“!!”获取上一次运行的命令】</p>
</li>
<li><p><code>$ python -m SimpleHTTPServer</code></p>
<p> 将当前的目录树挂载到<a href="http://$HOSTNAME:8000/" target="_blank" rel="external">http://$HOSTNAME:8000/</a> </p>
</li>
<li><p><code>$ ^foo^bar</code></p>
<p> 运行上一次的命令但是将 foo 替换为 bar</p>
</li>
<li><p><code>$ &lt;space&gt;command</code></p>
<p> 执行命令，但不在 history 中记录，可用来 hack。</p>
</li>
<li><p><code>$ ctrl-x e</code></p>
<p> 迅速打开一个编辑器，用来写复杂的命令。按住 <code>ctrl</code> 然后分别按 x，e</p>
</li>
<li><p><code>$ &#39;ALT+.&#39; or &#39;&lt;ESC&gt; .&#39;</code></p>
<p> 把最近使用的命令放到终端。（我自己使用的）<code>ALT+.</code>不成功。</p>
</li>
<li><p><code>$ curl ifconfig.me</code></p>
<p> 获取到外网 IP 地址</p>
<p> <code>curl ifconfig.me/ip -&gt; IP Adress</code></p>
<p> <code>curl ifconfig.me/host -&gt; Remote Host</code></p>
<p> <code>curl ifconfig.me/ua -&gt;User Agen</code>t</p>
<p> <code>curl ifconfig.me/port -&gt; Port</code></p>
<p> <code>thanks to http://ifconfig.me/</code></p>
</li>
</ol>
<ol>
<li><p><code>$ time read (ctrl-d to stop)</code></p>
<p> 一个非常简单的停表，输入任何按键停止。</p>
</li>
<li><p><code>$ ssh -t reachable_host ssh unreachable_host</code></p>
<p> 通过中间主机建立 SSH 联系。<br> unreachable 主机不能通过本地直接连接，但可以通过 reachable 主机连接，这个命令为 unreachable 主机通过隐藏连接连接到   reachable 主机</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>介绍几个常用的 Linux 命令行技巧命令，以期提高工作效率。</p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
      <category term="mac" scheme="http://blog.zhaochunqi.com/tags/mac/"/>
    
      <category term="terminal" scheme="http://blog.zhaochunqi.com/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[加速开发环境的搭建]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/15/speed-your-working-space/"/>
    <id>http://blog.zhaochunqi.com/2015/02/15/speed-your-working-space/</id>
    <published>2015-02-15T07:29:41.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>在国内，一些服务或者被墙，或者访问速度过慢，对开发者而言，这是最痛苦的，下面，介绍几种减轻痛苦的良方以飨读者。</p>
<a id="more"></a>
<h1 id="Linux_篇">Linux 篇</h1><p>linux 下更改源：<a href="http://mirrors.ustc.edu.cn/" title="中科大源" target="_blank" rel="external">http://mirrors.ustc.edu.cn/</a>，选择自己的 Linux 版本，然后选择对应的源配置，具体使用见<a href="https://lug.ustc.edu.cn/wiki/mirrors/help" title="配置帮助" target="_blank" rel="external">https://lug.ustc.edu.cn/wiki/mirrors/help</a></p>
<h1 id="HomeBrew_篇">HomeBrew 篇</h1><p>github 时不时的网络中断，brew update 经常不成功，更改 git 地址为中科大 git 源的地址：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin http://mirrors.ustc.edu.cn/homebrew.git</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>
<h1 id="Node_篇">Node 篇</h1><h2 id="NVM">NVM</h2><p>clone nvm 到本地，假设目录位于 <code>～</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/creationix/nvm.git</span><br></pre></td></tr></table></figure></p>
<p>更改 nvm 镜像地址，在.bashrc 中添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nvm</span></span><br><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=http://dist.u.qiniudn.com</span><br><span class="line"><span class="built_in">source</span> ~/nvm/nvm.sh</span><br></pre></td></tr></table></figure></p>
<p><code>source .bashrc</code> 后运行 nvm</p>
<h2 id="NPM">NPM</h2><p>通过 <code>--registry</code> 更改参数：<br><code>$ npm --registry=https://registry.npm.taobao.org install koa</code></p>
<h1 id="Pypi_篇">Pypi 篇 </h1><p> 通过 <code>-i</code> 更改参数:</p>
<p>如:<code>$ pip install web.py -i http://pypi.mirrors.ustc.edu.cn/simple</code></p>
<p><strong>注意后面有<code>/simple</code></strong></p>
<p>要配制成默认的话，需要创建或修改配置文件（linux 的文件在<code>~/.pip/pip.conf</code>，windows 在<code>%HOMEPATH%\pip\pip.ini</code>），修改内容为：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">index</span>-url = http:<span class="comment">//pypi.mirrors.ustc.edu.cn/simple</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，由于更改的都是非官方源，但由于选择的这些企业或学校都是属于比较靠谱的，基本不存在突然不可用的可能，如果有问题，改回来即可。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>在国内，一些服务或者被墙，或者访问速度过慢，对开发者而言，这是最痛苦的，下面，介绍几种减轻痛苦的良方以飨读者。</p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
      <category term="mac" scheme="http://blog.zhaochunqi.com/tags/mac/"/>
    
      <category term="nodejs" scheme="http://blog.zhaochunqi.com/tags/nodejs/"/>
    
      <category term="python" scheme="http://blog.zhaochunqi.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo toc 无法显示]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/11/hexo-toc-problem/"/>
    <id>http://blog.zhaochunqi.com/2015/02/11/hexo-toc-problem/</id>
    <published>2015-02-11T03:00:55.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<h2 id="问题">问题 </h2><p> 使用 Hexo 渲染的时候发现有的问题有 TOC，有的文章没有 TOC。经过一番探索研究，找到了问题所在。</p>
<a id="more"></a>
<h2 id="排查">排查</h2><ul>
<li>换了 Chrome 浏览器之后发现问题依旧。排除浏览器的原因。</li>
</ul>
<ul>
<li><code>hexo clean</code>  <code>hexo g</code>之后发现问题依旧，排除旧模板的原因。</li>
</ul>
<ul>
<li>更改_config 模板配置文件 TOC 模块之后问题依旧，排除模板配置原因。</li>
</ul>
<ul>
<li>打开 Firebug，查看 JS 代码之后发现 H2 如果标题没有的话会被设定<code>display:none</code><br><img src="http://harchiko.qiniudn.com/hexo-toc-problem/toc_not_show.png" alt=""></li>
</ul>
<p>至此！谜题就此揭开!</p>
<h2 id="解决办法">解决办法 </h2><p> 写的时候添加个二级标题。也就是 ##</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题">问题</h2><p>使用Hexo渲染的时候发现有的问题有TOC，有的文章没有TOC。经过一番探索研究，找到了问题所在。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://blog.zhaochunqi.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[shadowsocks 使用指南]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/10/shadowsocks-user-manual/"/>
    <id>http://blog.zhaochunqi.com/2015/02/10/shadowsocks-user-manual/</id>
    <published>2015-02-10T02:36:17.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<h2 id="关于">关于 </h2><p><strong>ShadowSocks</strong> 在上一篇的<a href="http://blog.zhaochunqi.com/Auto-Proxy/" title="Shadowsocks 透明代理的实现">Shadowsocks 透明代理的实现</a> 中提到过，本文将重点讲解一下 shadowsocks 的使用方法。</p>
<p>原文链接：<a href="http://blog.zhaochunqi.com/shadowsocks-user-manual/">http://blog.zhaochunqi.com/shadowsocks-user-manual/</a></p>
<p>作者：<a href="http://blog.zhaochunqi.com" title="http://blog.zhaochunqi.com">zhaochunqi</a></p>
<a id="more"></a>
<h2 id="ShadowSocks_介绍">ShadowSocks 介绍</h2><ul>
<li>代理 / 翻强工具。</li>
<li>使用稳定。</li>
</ul>
<h2 id="下载">下载 </h2><p> 下载：<a href="https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients#windows" target="_blank" rel="external">https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients#windows</a>在这里选择对应版本的 shadowsocks 客户端下载。</p>
<p>介于目前国内访问环境的恶劣，直接提供下地址：</p>
<p>windows 客户端（2015-02-10）: <a href="http://harchiko.qiniudn.com/shadowsocks-user-manual/Shadowsocks-win-2.1.6.zip" target="_blank" rel="external">http://harchiko.qiniudn.com/shadowsocks-user-manual/Shadowsocks-win-2.1.6.zip</a></p>
<p>Mac 客户端（2015-02-10）: <a href="http://harchiko.qiniudn.com/shadowsocks-user-manual/ShadowsocksX-2.6.2.dmg" target="_blank" rel="external">http://harchiko.qiniudn.com/shadowsocks-user-manual/ShadowsocksX-2.6.2.dmg</a></p>
<p><strong>注意：</strong>最好先尝试下能否从官方下载。不行的话可以从我这里下载。</p>
<h2 id="使用">使用</h2><p>Shadowsocks 的配置很简单：</p>
<p><img src="http://harchiko.qiniudn.com/shadowsocks-user-manual/shadowsocks.png" alt=""></p>
<p>填写好服务器 ip，服务器端口，密码，加密方式后即可。代理端口默认即可。</p>
<p>打开 IE，开启 Google 试试吧!</p>
<p>针对 Firefox 和 Chrome 有对应的插件配置，注意使用 SOCKS5 代理即可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="关于">关于</h2><p><strong>ShadowSocks</strong> 在上一篇的<a href="http://blog.zhaochunqi.com/Auto-Proxy/" title="Shadowsocks 透明代理的实现">Shadowsocks 透明代理的实现</a>中提到过，本文将重点讲解一下shadowsocks的使用方法。</p>
<p>原文链接：<a href="http://blog.zhaochunqi.com/shadowsocks-user-manual/">http://blog.zhaochunqi.com/shadowsocks-user-manual/</a></p>
<p>作者：<a href="http://blog.zhaochunqi.com" title="http://blog.zhaochunqi.com">zhaochunqi</a></p>]]>
    
    </summary>
    
      <category term="mac" scheme="http://blog.zhaochunqi.com/tags/mac/"/>
    
      <category term="shadowsocks" scheme="http://blog.zhaochunqi.com/tags/shadowsocks/"/>
    
      <category term="vpn" scheme="http://blog.zhaochunqi.com/tags/vpn/"/>
    
      <category term="windows" scheme="http://blog.zhaochunqi.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Parallels 下 Vagrant 使用指南]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/05/introduce-vagrant/"/>
    <id>http://blog.zhaochunqi.com/2015/02/05/introduce-vagrant/</id>
    <published>2015-02-05T01:59:07.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>环境：OSX yosemite/Parallels Desktop 10</p>
<h2 id="Vagrant_介绍">Vagrant 介绍</h2><p>Vagrant 是一个基于 Ruby 的工具，用于创建和部署虚拟化开发环境。它 使用 Oracle 的开源 VirtualBox 虚拟化系统，使用 Chef 创建自动化虚拟环境。</p>
<a id="more"></a>
<h2 id="安装_Vagrant">安装 Vagrant</h2><p>从这里 <a href="http://www.vagrantup.com/downloads" title="vagrant 下载" target="_blank" rel="external">http://www.vagrantup.com/downloads</a> 下载对应版本的 vagrant 安装。</p>
<h2 id="安装_Vagrant_插件">安装 Vagrant 插件 </h2><p> 打开 Terminal，安装 vagrant 插件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant plugin install vagrant-parallels</span><br></pre></td></tr></table></figure>
<h2 id="使用_Vagrant">使用 Vagrant</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir new_vagrant_project</span><br><span class="line">$ <span class="built_in">cd</span> new_vagrant_project</span><br><span class="line">$ vagrant init parallels/centos-<span class="number">6.5</span></span><br><span class="line">$ vagrant up --provider=parallels</span><br></pre></td></tr></table></figure>
<p>这样就成功的安装了 centos-6.5</p>
<h2 id="修改默认的_Provider_(可选)">修改默认的 Provider (可选)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> VAGRANT_DEFAULT_PROVIDER=parallels</span><br></pre></td></tr></table></figure>
<p>可添加到.bashrc 或者 .zshrc(如果你使用 zsh)</p>
<h2 id="使用 SSH 连接">使用 SSH 连接 </h2><p> 进入 vagrant 所在目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant ssh</span><br></pre></td></tr></table></figure></p>
<h2 id="box_选择">box 选择 </h2><p> 如果你想要其他的发行版：如 ubuntu 等，在这个网页中查找是否有你所需要的：<br><a href="https://vagrantcloud.com/boxes/search?provider=parallels" title="box" target="_blank" rel="external">https://vagrantcloud.com/boxes/search?provider=parallels</a></p>
<h2 id="vagrant_manager（可选 / 推荐）">vagrant manager（可选 / 推荐）</h2><p>Vagrant Manager 是在通知栏的可以管理 Vagrant 的工具。（Mac 版本 /Windows 版本都有）</p>
<p>具体表现如图：<br><img src="http://harchiko.qiniudn.com/introduce-vagrant/vagrant_manager.gif" alt="vagrant manager"></p>
<p>下载见：<a href="https://github.com/lanayotech/vagrant-manager" title="vagrant manager" target="_blank" rel="external">https://github.com/lanayotech/vagrant-manager</a></p>
<h3 id="Happy_Coding_~">Happy Coding ~</h3>]]></content>
    <summary type="html">
    <![CDATA[<p>环境：OSX yosemite/Parallels Desktop 10</p>
<h2 id="Vagrant_介绍">Vagrant 介绍</h2><p>Vagrant 是一个基于 Ruby 的工具，用于创建和部署虚拟化开发环境。它 使用 Oracle 的开源 VirtualBox 虚拟化系统，使用 Chef 创建自动化虚拟环境。</p>]]>
    
    </summary>
    
      <category term="mac" scheme="http://blog.zhaochunqi.com/tags/mac/"/>
    
      <category term="parallels" scheme="http://blog.zhaochunqi.com/tags/parallels/"/>
    
      <category term="vagrant" scheme="http://blog.zhaochunqi.com/tags/vagrant/"/>
    
      <category term="soft" scheme="http://blog.zhaochunqi.com/categories/soft/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[美剧订阅神器 showrss]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/04/tools-for-us-TV-series/"/>
    <id>http://blog.zhaochunqi.com/2015/02/04/tools-for-us-TV-series/</id>
    <published>2015-02-04T01:21:44.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>今日同事推荐了个看美剧的神器的网站 <a href="http://showrss.info/" target="_blank" rel="external">showrss</a>,</p>
<a id="more"></a>
<h2 id="界面">界面 </h2><p> 这个网站的样子大概是这个样子的:<br><img src="http://7jpt8j.com1.z0.glb.clouddn.com/tools-for-us-TV-series/website.png" alt="showrss"></p>
<h3 id="使用 RSS 订阅">使用 RSS 订阅 </h3><h4 id="你还可以使用 RSS 订阅"> 你还可以使用 RSS 订阅 </h4><p> 注册进去后，可以订阅各种美剧如：Grey’s Anatomy, The Big Bang theory 等，</p>
<h4 id="在界面中点击你喜欢的美剧名称即可订阅:">在界面中点击你喜欢的美剧名称即可订阅:</h4><p><img src="http://7jpt8j.com1.z0.glb.clouddn.com/tools-for-us-TV-series/pick_series.png" alt="pickseries"></p>
<h4 id="如果你想知道下一集是什么的话，网站还提供计划表:">如果你想知道下一集是什么的话，网站还提供计划表:</h4><p><img src="http://7jpt8j.com1.z0.glb.clouddn.com/tools-for-us-TV-series/schedule.png" alt="schedule"></p>
<h4 id="你还可以使用 RSS 订阅 -1">你还可以使用 RSS 订阅</h4><p><img src="http://7jpt8j.com1.z0.glb.clouddn.com/tools-for-us-TV-series/feeds.png" alt="rss"></p>
<h4 id="在这里面，你可以进行：">在这里面，你可以进行：</h4><ul>
<li>单集 RSS 订阅</li>
<li>个人剧集订阅</li>
<li>剧集时间表订阅(提供 rss 和 iCalendar 格式)</li>
<li>网站信息订阅（这个不重要)</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>今日同事推荐了个看美剧的神器的网站 <a href="http://showrss.info/">showrss</a>,</p>]]>
    
    </summary>
    
      <category term="series" scheme="http://blog.zhaochunqi.com/tags/series/"/>
    
      <category term="tv" scheme="http://blog.zhaochunqi.com/tags/tv/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于 Shadowsocks 透明代理的实现]]></title>
    <link href="http://blog.zhaochunqi.com/2015/02/04/Auto-Proxy/"/>
    <id>http://blog.zhaochunqi.com/2015/02/04/Auto-Proxy/</id>
    <published>2015-02-04T01:21:44.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p><strong> 本文只是提供了一个透明代理实现的思路，具体代码等待后续补充。</strong></p>
<a id="more"></a>
<p> 程序员们最在意的，可能就是网络跟设备配置了。</p>
<p> 做一个透明代理，能够做到：</p>
<pre><code> 自动翻墙，本地无需配置。
</code></pre><h2 id="网络拓扑图"> 网络拓扑图 </h2><p><img src="http://harchiko.qiniudn.com/Auto-Proxy/autoproxy_map.png" alt="透明代理网络拓扑图"></p>
<h2 id="需求"> 需求 </h2><ol>
<li> 一台外网 VPS（能被中国大陆访问到，能够访问到 Facebook 等网站）</li>
<li> 一台本地 Linux 服务器 (此处可以用智能路由器代替)。</li>
</ol>
<h2 id="方案设想"> 方案设想 </h2><ol>
<li> 本地的 Linux 服务器作为网关， 处理本地流量和需要代理的流量。</li>
<li> 本地服务器将需要代理的流量转发给 Shadowsocks 并通过 Shadowsocks 来实现代理功能。</li>
<li> 流量转发到 Cow 中，然后通过 Cow 来判断需要自动翻墙的网址。</li>
</ol>
<h2 id="具体方案"> 具体方案 </h2><ol>
<li> 在 VPS 中安装 Shadowsocks，并在本地客户端测试是否成功。</li>
<li> 在本地 Linux 服务器中部署 Cow，通过 Cow 来进行 ShadowSocks 代理。</li>
<li> 使用 iptables 将流量转发到 Cow 本地监控的端口。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>本文只是提供了一个透明代理实现的思路，具体代码等待后续补充。</strong></p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
      <category term="proxy" scheme="http://blog.zhaochunqi.com/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo 更改默认 Google 字体]]></title>
    <link href="http://blog.zhaochunqi.com/2015/01/27/change-google-font-to-360/"/>
    <id>http://blog.zhaochunqi.com/2015/01/27/change-google-font-to-360/</id>
    <published>2015-01-27T01:11:15.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p> 因为一些国内的客观原因，google 的访问速度一直很慢，通过 firebug 看了下 google 相关的服务加载速度超过了 1s 种，而且经常加载不成功。</p>
<a id="more"></a>
<p> 更改方法：</p>
<p>terminal 中查找 themes 里对应 googlefont 的数据。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -ir googlefont themes/</span><br></pre></td></tr></table></figure>
<p> 找到对应的地方替换为 360 的字体源：</p>
<p>360 前端 CDN 网站：<a href="http://libs.useso.com/" title="360 前端 CDN" target="_blank" rel="external">http://libs.useso.com/</a></p>
<p><strong> 本人对 360 不黑不粉，请纠结 360 的让道 </strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>因为一些国内的客观原因，google的访问速度一直很慢，通过firebug看了下google 相关的服务加载速度超过了1s种，而且经常加载不成功。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://blog.zhaochunqi.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[xpath 简明教程]]></title>
    <link href="http://blog.zhaochunqi.com/2015/01/23/how-to-use-xpath/"/>
    <id>http://blog.zhaochunqi.com/2015/01/23/how-to-use-xpath/</id>
    <published>2015-01-23T06:45:22.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<h2 id="什么是 xpath?">什么是 xpath?</h2><blockquote>
<p>XPath 是一门在 XML 文档中查找信息的语言。XPath 可用来在 XML 文档中对元素和属性进行遍历。</p>
</blockquote>
<a id="more"></a>
<h2 id="XPath_术语">XPath 术语</h2><table>
<thead>
<tr>
<th>术语</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>节点(node)</td>
<td>在 XPath 中，有七种类型的节点：元素、属性、文本、命名空间、处理指令、注释以及文档（根）节点。XML 文档是被作为节点树来对待的。树的根被称为文档节点或者根节点。</td>
</tr>
<tr>
<td>基本值（或称原子值，Atomic value）</td>
<td>无父无子的节点</td>
</tr>
<tr>
<td>项目（Item）</td>
<td>基本值或节点</td>
</tr>
<tr>
<td>节点关系</td>
<td>父、子、同胞等</td>
</tr>
</tbody>
</table>
<h2 id="XPath_用法">XPath 用法 </h2><p> 选取节点</p>
<blockquote>
<p>下面列举了最有用的节点表达式</p>
</blockquote>
<table>
<thead>
<tr>
<th>表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>nodename</td>
<td>选取此节点的所有子节点。</td>
</tr>
<tr>
<td>/</td>
<td>从根节点选取。</td>
</tr>
<tr>
<td>//</td>
<td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td>
</tr>
<tr>
<td>.</td>
<td>选取当前节点。</td>
</tr>
<tr>
<td>..</td>
<td>选取当前节点的父节点。</td>
</tr>
<tr>
<td>@</td>
<td>选取属性。</td>
</tr>
</tbody>
</table>
<p><strong>text() 选取节点内元素</strong></p>
<p>下面以一段 xml 代码为例：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">bookstore</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">book</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span> <span class="attribute">lang</span>=<span class="value">"eng"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="title">price</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">book</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span> <span class="attribute">lang</span>=<span class="value">"eng"</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="title">price</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>路径表达式</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>bookstore</td>
<td>选取 bookstore 元素的所有子节点。</td>
</tr>
<tr>
<td>/bookstore</td>
<td>选取根元素 bookstore。注释：假如路径起始于正斜杠(/)，则此路径始终代表到某元素的绝对路径！</td>
</tr>
<tr>
<td>bookstore/book</td>
<td>选取属于 bookstore 的子元素的所有 book 元素。</td>
</tr>
<tr>
<td>//book</td>
<td>选取所有 book 子元素，而不管它们在文档中的位置。</td>
</tr>
<tr>
<td>bookstore//book</td>
<td>选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。</td>
</tr>
<tr>
<td>//@lang</td>
<td>选取名为 lang 的所有属性。</td>
</tr>
</tbody>
</table>
<h2 id="谓语">谓语 </h2><p> 谓语用来查找某个特定的节点或者包含某个指定的值的节点。<br>谓语被嵌在方括号中。</p>
<table>
<thead>
<tr>
<th>路径表达式</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>/bookstore/book<a href="http://www.oschina.net/" title="开源中国" target="_blank" rel="external">1</a></td>
<td>选取属于 bookstore 子元素的第一个 book 元素。</td>
</tr>
<tr>
<td>/bookstore/book[last()]</td>
<td>选取属于 bookstore 子元素的最后一个 book 元素。</td>
</tr>
<tr>
<td>/bookstore/book[last()-1]</td>
<td>选取属于 bookstore 子元素的倒数第二个 book 元素。</td>
</tr>
<tr>
<td>/bookstore/book[position()&lt;3]</td>
<td>选取最前面的两个属于 bookstore 元素的子元素的 book 元素。</td>
</tr>
<tr>
<td>//title[@lang]</td>
<td>选取所有拥有名为 lang 的属性的 title 元素。</td>
</tr>
<tr>
<td>//title[@lang=’eng’]</td>
<td>选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性。</td>
</tr>
<tr>
<td>/bookstore/book[price&gt;35.00]</td>
<td>选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。</td>
</tr>
<tr>
<td>/bookstore/book[price&gt;35.00]/title</td>
<td>选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。</td>
</tr>
</tbody>
</table>
<h2 id="实战">实战 </h2><p> 以 <a href="http://www.oschina.net/" title="开源中国" target="_blank" rel="external">开源中国 </a> 为例，我们来试试 XPath 能做什么？</p>
<ol>
<li><p>假设我们想要获取图示部分的内容：<br><img src="http://harchiko.qiniudn.com/how-to-use-xpath/oschina.png" alt="开源中国" title="开源中国"></p>
</li>
<li><p>打开 Firebug，定位到这一部分：<br><img src="http://harchiko.qiniudn.com/how-to-use-xpath/oschina-firebug.png" alt="Firebug" title="firebug"><br>xpath 写为: <code>id(&#39;ProjectNews&#39;)/ul/li/a</code></p>
</li>
<li><p>使用插件 xpath checker 查看到获取到的信息<br><img src="http://harchiko.qiniudn.com/how-to-use-xpath/xpath.png" alt="xpath" title="xpath"></p>
</li>
</ol>
<p>获取到了。</p>
<h2 id="美女">美女 </h2><p> 比如： 下载花瓣中这个画板的图片<a href="http://huaban.com/boards/293742/" target="_blank" rel="external">http://huaban.com/boards/293742/</a></p>
<p>图片如图：<br><img src="http://harchiko.qiniudn.com/how-to-use-xpath/huaban.png" alt="花瓣美女"></p>
<p>要下载这里面每一个美女的图片，重复我们之前的步骤：</p>
<p>为了找到图片的 URL，打开 firebug，找到图片对应的 xpath 路径，经过一番尝试：<code>//div/div/div/div/a/img[1][@width=&quot;236&quot;]</code>可以顺利找到所有的图片。</p>
<p><img src="http://harchiko.qiniudn.com/how-to-use-xpath/huaban_xpath_01.png" alt="xpath"></p>
<p>通过 <code>//div/div/div/div/a/img[1][@width=&quot;236&quot;]/@src</code> 即可顺利找到所有图片的 URL。</p>
<p><img src="http://harchiko.qiniudn.com/how-to-use-xpath/huaban_xpath_02.png" alt="xpath"></p>
<p>这样所有的 xpath 都获取到了。</p>
<p>这样就获取到了这些地址，但这些地址并不是原图大小的，对比原图与这个地址，发现后面 236 更改为 658 即可获取到大图地址。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="什么是xpath?">什么是xpath?</h2><blockquote>
<p>XPath 是一门在 XML 文档中查找信息的语言。XPath 可用来在 XML 文档中对元素和属性进行遍历。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="xpath" scheme="http://blog.zhaochunqi.com/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何确定 python 运行所在的文件位置]]></title>
    <link href="http://blog.zhaochunqi.com/2015/01/23/python-runs-directory/"/>
    <id>http://blog.zhaochunqi.com/2015/01/23/python-runs-directory/</id>
    <published>2015-01-23T01:56:38.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<p>如何确定 python 脚本的位置？<br>python 脚本有个 <code>__file__</code> 属性，能够确定脚本所在的位置。但由于运行文件夹的不同，<code>__file__</code>的相对路径也不同。</p>
<a id="more"></a>
<h2 id="如何确定当前脚本的绝对路径">如何确定当前脚本的绝对路径</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">print</span> os.path.realpath(__file__)</span><br></pre></td></tr></table></figure>
<h2 id="如何确定当前脚本所在的文件夹">如何确定当前脚本所在的文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">print</span> os.path.dirname(os.path.realpath(__file__))</span><br></pre></td></tr></table></figure>
<h2 id="如何确定当前脚本所在的文件夹的父文件夹">如何确定当前脚本所在的文件夹的父文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">print</span> os.path.dirname(os.path.dirname(os.path.realpath(__file__)))</span><br></pre></td></tr></table></figure>
<h2 id="一种编程方式">一种编程方式 </h2><p> 在编写程序的时候，想要使用一些绝对路径相关的变量，会单独定义一个脚本如 <code>pathinfo.py</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">src_dir</span><span class="params">()</span>:</span></span><br><span class="line">	<span class="keyword">return</span> os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">code_dir</span><span class="params">()</span>:</span></span><br><span class="line">	<span class="keyword">return</span> os.path.dirname(src_dir())</span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_dir</span><span class="params">()</span>:</span></span><br><span class="line">	<span class="keyword">return</span> code_dir()+<span class="string">'/log'</span></span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conf_dir</span><span class="params">()</span>:</span></span><br><span class="line">	<span class="keyword">return</span> code_dir()+<span class="string">'/conf'</span></span><br></pre></td></tr></table></figure>
<p>这样，使用的时候 <code>import pathinfo</code> 即可</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>如何确定python脚本的位置？<br>python脚本有个<code>__file__</code>属性，能够确定脚本所在的位置。但由于运行文件夹的不同，<code>__file__</code>的相对路径也不同。</p>]]>
    
    </summary>
    
      <category term="python" scheme="http://blog.zhaochunqi.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何在 Ubuntu 中安装 hexo]]></title>
    <link href="http://blog.zhaochunqi.com/2014/12/22/install-hexo/"/>
    <id>http://blog.zhaochunqi.com/2014/12/22/install-hexo/</id>
    <published>2014-12-22T02:18:16.000Z</published>
    <updated>2015-11-25T20:06:49.294Z</updated>
    <content type="html"><![CDATA[<h2 id="安装_nvm">安装 nvm</h2><p>cURL:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>Wget:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure></p>
<p>安装后重启 Terminal 。</p>
<blockquote>
<p>因为使用的是 zsh，所以最好在.zshrc 文件中加入这句<code>source ~/.nvm/nvm.sh</code> </p>
</blockquote>
<h2 id="安装_NodeJS">安装 NodeJS</h2><p>运行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install <span class="number">0.10</span> &amp;&amp; nvm use <span class="number">0.10</span></span><br></pre></td></tr></table></figure>
<h3 id="安装_Hexo">安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Hexo 的使用以及注意事项见 <a href="http://hexo.io/docs/" target="_blank" rel="external"> 链接</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="安装_nvm">安装 nvm</h2><p>cURL:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
  </entry>
  
</feed>
