<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Alex Coding</title>
  
  <subtitle>A Place Where I Write Things.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.zhaochunqi.com/"/>
  <updated>2017-12-21T09:27:05.255Z</updated>
  <id>http://blog.zhaochunqi.com/</id>
  
  <author>
    <name>Alex Zhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【2017-12-21】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/21/2017-12-21/"/>
    <id>http://blog.zhaochunqi.com/2017/12/21/2017-12-21/</id>
    <published>2017-12-21T10:46:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a> 解决的方法 </h3><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a> 解决的过程 </h3><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a> 解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;h3 id=&quot;解决的方法&quot;&gt;&lt;a href=&quot;# 解决的方法&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-20】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/20/2017-12-20/"/>
    <id>http://blog.zhaochunqi.com/2017/12/20/2017-12-20/</id>
    <published>2017-12-20T21:27:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><p> 在 AWS Lambda 中添加 SFTP 下载方法。</p><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法 </h3><ol><li> 使用 JSch 连接 -&gt; 未能解决，因为 ssh 禁用了弱的加密模式。需要手动开启，需要研究下如何开启。</li></ol><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a>解决的过程 </h3><ol><li> 使用 JSCh ，直接报认证失败。报错信息有点简陋，可能我错过了什么。</li><li>使用系统自带的 yummy ftp 进行认证，发现也是无法进行正常的登录，终于发现了报错信息是 </li></ol><p><img src="https://ww1.sinaimg.cn/large/6277837dgy1fmo725tyudj21720a2my5.jpg" alt=""></p><ol><li> 换了另外一个库，也是同样的报错。</li></ol><h3 id=" 解决方法记录 "><a href="# 解决方法记录 "class="headerlink"title=" 解决方法记录 "></a>解决方法记录 </h3><p> 并没有解决，正在寻找解决办法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;p&gt; 在 AWS Lambda 中添加 SFTP 下载方法。&lt;/p&gt;&lt;h3 id=&quot;解决的方法&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-17】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/17/2017-12-17/"/>
    <id>http://blog.zhaochunqi.com/2017/12/17/2017-12-17/</id>
    <published>2017-12-17T11:59:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><ol><li>《芜湖公交》的使用的接口身边芜湖已经挂了至少一个星期了，看样子好像也没有修的打算。</li><li> 当前可用的版本还是《城市令》的查询公交接口，不过，城市令的接口是经过加密的，不能直接看到数据，形式如：<br>(中间有删减，不然特别长)<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"data"</span>: <span class="string">"2FDB121D73DAA81DE5AE2782C30AEx"</span>,</span><br><span class="line"><span class="attr">"key"</span>: <span class="string">"y9+arDZ1N5OXRRYqaxgqtY8mKhxo9DyUx9iPgpAbR3Z+KmwHi6Ogzn4Ji46svefKt+jdCawWyUsid+XML54PlDedcjBi6x9os="</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>这样的接口我是看不懂的，尝试使用普通的一些解密发现不能奏效，只能反编译下他的 apk 了。</p><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法</h3><ol><li>城市令 APK</li></ol><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a>解决的过程 </h3><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a> 解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;ol&gt;&lt;li&gt;《芜湖公交》的使用的接口身边芜湖已经挂了至少一个星期了，看样子好像也没有修的打算。&lt;/li&gt;&lt;li&gt; 
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-15】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/15/2017-12-15/"/>
    <id>http://blog.zhaochunqi.com/2017/12/15/2017-12-15/</id>
    <published>2017-12-15T00:27:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><p>Akka Stream 调试问题, 并行操作。</p><ol><li> 不了解现在存在什么问题。</li></ol><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法 </h3><p><del> 先看书，然后开始着手解决，我给自己两个小时的看书时间。</del></p><ol><li>重点看一下最近的 commit 集中的几个文件。</li></ol><h3 id="解决的过程 - 未解决"><a href="# 解决的过程 - 未解决" class="headerlink" title="解决的过程 (未解决)"></a> 解决的过程 (未解决)</h3><ol><li> 修改了 UpsertJobRequest，FindCompanyRequest，DynamoDBClient，JobFeedStreamConvertSource，</li></ol><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a>解决方法记录 </h3><ol><li> 大体看了下，问题主要集中在 Parallel 这方面。</li><li>首先看 PDF 书中关于 Parallel 的部分，看如何来处理。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;p&gt;Akka Stream 调试问题, 并行操作。&lt;/p&gt;&lt;ol&gt;&lt;li&gt; 不了解现在存在什么问题。&lt;/li&gt;&lt;/o
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-14】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/14/2017-12-14/"/>
    <id>http://blog.zhaochunqi.com/2017/12/14/2017-12-14/</id>
    <published>2017-12-14T00:05:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><p>Akka Stream 不能正常工作。</p><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a> 解决的方法 </h3><p> 绘出 Akka Stream 的图。</p><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a>解决的过程 </h3><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a> 解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;p&gt;Akka Stream 不能正常工作。&lt;/p&gt;&lt;h3 id=&quot;解决的方法&quot;&gt;&lt;a href=&quot;# 解决的方法&quot; 
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-12】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/12/2017-12-12/"/>
    <id>http://blog.zhaochunqi.com/2017/12/12/2017-12-12/</id>
    <published>2017-12-12T11:05:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a> 解决的方法 </h3><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a> 解决的过程 </h3><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a> 解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;h3 id=&quot;解决的方法&quot;&gt;&lt;a href=&quot;# 解决的方法&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-11】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/11/2017-12-11/"/>
    <id>http://blog.zhaochunqi.com/2017/12/11/2017-12-11/</id>
    <published>2017-12-11T10:11:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><ol><li><p> 一个非常古老的使用 Eclipse 构建的 Android 应用无法导入到 Android Studio 中，然后产生了一系列的问题。包括 </p><ul><li> 提示 <code>Gradle sync failed: Could not determine the class-path for interface org.jetbrains.kotlin.gradle.KotlinGradleModel.Consult IDE log for more details (Help | Show Log) (3m 25s 678ms)</code></li><li>编码无法解析为 UTF-8 ，经验证实际是 GB 2312</li><li>文件头中存在 BOM ，无法通过编译运行。</li></ul></li></ol><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法 </h3><ol><li> 使用了下面的方法来解决 <ul><li>Eclipse 安装 ADT -&gt; 失败， 因为 ADT 已经好久都没有支持了。</li><li> 到 androiddevtools.cn 网站上找了个集成 Eclipse 的 adt。然后加载了项目之后通过 gradle 导出。</li><li>遇到的第一个 gradle 的报错， 修改了 gradle 依赖库，更新了 gradle-wrapper.properties 中的 gradle 版本。</li><li>utf-8 问题，通过 shell 脚本 <strong> 如果您无法看到下面代码内容请使用科学上网工具 </strong><script src="https://gist.github.com/anonymous/14274ca40f45387a92d615107068ba85.js"></script></li><li> 文件头存在 Bom 的问题，通过脚本 <strong> 如果您无法看到下面代码内容请使用科学上网工具 </strong><script src="https://gist.github.com/anonymous/01c97cfe381aab2edf812d04405f8d08.js"></script> 处理。</li></ul></li></ol><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a>解决的过程 </h3><p> 无他，一步一步搜索。</p><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a>解决方法记录 </h3><p> 见解决方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt; 一个非常古老的使用 Eclipse 构建的 Android 应用无法导入到 Android S
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-10】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/10/2017-12-10/"/>
    <id>http://blog.zhaochunqi.com/2017/12/10/2017-12-10/</id>
    <published>2017-12-10T11:22:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><ol><li> 无法获取到当前出现错误的地方，需要能够将错误信息 push 到 SQS 中。</li><li>Intellij 有个非常牛逼的功能 <a href="https://youtu.be/-7OyuTMgI1I?t=199" target="_blank" rel="noopener">https://youtu.be/-7OyuTMgI1I?t=199</a> 选中代码块，确定返回值类型。</li></ol><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法 </h3><ol><li> 查看 Akka 的教程中关于 fault tolerance 方面。</li><li>使用系统自带的 CheetSheet 来查找快捷键。</li></ol><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a>解决的过程 </h3><ol><li></li><li> 经过一番查找，发现是快捷键 Ctrl + Shift + P</li></ol><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a>解决方法记录 </h3><ol><li> 首先是想着从每日 tips 中查看，后来感觉可能在 CheetSheet 中有，查看了下 CheetSheet View 中的内容。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;ol&gt;&lt;li&gt; 无法获取到当前出现错误的地方，需要能够将错误信息 push 到 SQS 中。&lt;/li&gt;&lt;li&gt;Int
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-08】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/08/2017-12-08/"/>
    <id>http://blog.zhaochunqi.com/2017/12/08/2017-12-08/</id>
    <published>2017-12-08T00:33:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><ol><li> 首先是确保 fault tolerance 能够正常。</li><li>确保能够正常的测试 <ul><li> 抛出几个异常来看看。</li><li>如何把异常放到 sqs 中这是个问题。</li></ul></li><li>多个 xml 文件合并成一个。</li></ol><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法 </h3><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a> 解决的过程 </h3><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a> 解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;ol&gt;&lt;li&gt; 首先是确保 fault tolerance 能够正常。&lt;/li&gt;&lt;li&gt;确保能够正常的测试 &lt;ul&gt;
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-07】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/07/2017-12-07/"/>
    <id>http://blog.zhaochunqi.com/2017/12/07/2017-12-07/</id>
    <published>2017-12-07T22:32:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><ol><li> 目前程序如何进行相关的调试工作。<br>Feed Stream 中的数据形式</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;<span class="attr">"s3Bucket"</span>:<span class="string">"mac-job-feeds"</span>,<span class="attr">"s3Key"</span>:<span class="string">"jobs2careers-Gig-1512657035832.xml"</span>,<span class="attr">"jobFeedXML"</span>:&#123;<span class="attr">"id"</span>:<span class="string">"companies/3da9bfc9-9cfe-4373-b0fb-c181cd47c333"</span>,<span class="attr">"name"</span>:<span class="string">"Gig"</span>,<span class="attr">"url"</span>:<span class="string">"http://www2.jobs2careers.com/feed.php?id=1183-2055&amp;c=1&amp;pass=p8u01XbM3Pq5Fv2W"</span>,<span class="attr">"type"</span>:<span class="string">"jobs2careers"</span>,<span class="attr">"jobXmlTag"</span>:<span class="string">"job"</span>,<span class="attr">"gzipped"</span>:<span class="literal">true</span>,<span class="attr">"emptyCDATA"</span>:<span class="literal">false</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法</h3><ol><li>可以在本地直接跑 FeedConsumer 来操作。</li></ol><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a>解决的过程</h3><ol><li>仔细询问了具体的步骤。</li></ol><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a>解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;ol&gt;&lt;li&gt; 目前程序如何进行相关的调试工作。&lt;br&gt;Feed Stream 中的数据形式&lt;/li&gt;&lt;/ol&gt;&lt;f
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-06】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/06/2017-12-06/"/>
    <id>http://blog.zhaochunqi.com/2017/12/06/2017-12-06/</id>
    <published>2017-12-06T09:03:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="# 遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题 </h3><p><del> 使用的一个 Google 服务在重复的时候会报错 HTTP429。 我本来以为 429 错误会是重复导致的。但是根据 <a href="https://httpstatuses.com/429" target="_blank" rel="noopener">https://httpstatuses.com/429</a> 链接来看，429 是由于请求过多的原因导致。</del></p><p><strong>搞错了 </strong> 结果是 409 问题。</p><p>409 是由于请求的资源 conflict</p><h3 id="解决的方法"><a href="# 解决的方法" class="headerlink" title="解决的方法"></a>解决的方法 </h3><p><del>1. 查看代码中 429 问题之前的提交代码，查看如何进行查重的。</del></p><ol><li> 查看代码中产生 409 的地方是否采用的是 put 方法 </li></ol><h3 id="解决的过程"><a href="# 解决的过程" class="headerlink" title="解决的过程"></a> 解决的过程 </h3><h3 id="解决方法记录"><a href="# 解决方法记录" class="headerlink" title="解决方法记录"></a> 解决方法记录</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;# 遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题 &lt;/h3&gt;&lt;p&gt;&lt;del&gt; 使用的一个 Google 服务在重复的时候会报错 HTTP429。 我本来以为 429 错误会是重复
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-05】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/05/2017-12-05/"/>
    <id>http://blog.zhaochunqi.com/2017/12/05/2017-12-05/</id>
    <published>2017-12-05T03:26:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="# 问题" class="headerlink" title="问题"></a>问题 </h3><p> 如何在国内 vps 安装爬墙软件。</p><h3 id="解决方法"><a href="# 解决方法" class="headerlink" title="解决方法"></a>解决方法 </h3><ol><li> 参看图拉鼎配置的文章。</li><li><a href="https://imtx.me/archives/2375.html" target="_blank" rel="noopener">https://imtx.me/archives/2375.html</a></li></ol><h3 id="记录解决过程"><a href="# 记录解决过程" class="headerlink" title="记录解决过程"></a>记录解决过程 </h3><ol><li> 开启 byobu</li><li>安装 proxychains 与 shadowsocks。</li><li><code>proxychains curl ifconfig.me</code> 检查下 </li></ol><h3 id="记录此方法，思考是否有更好的解决方法"><a href="# 记录此方法，思考是否有更好的解决方法" class="headerlink" title="记录此方法，思考是否有更好的解决方法"></a> 记录此方法，思考是否有更好的解决方法 </h3><ol><li> 这种方法是在请求的时候套一个工具。</li></ol><p>目前感觉这种方法还不错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;# 问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题 &lt;/h3&gt;&lt;p&gt; 如何在国内 vps 安装爬墙软件。&lt;/p&gt;&lt;h3 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;# 解决方法&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>【2017-12-04】</title>
    <link href="http://blog.zhaochunqi.com/2017/12/04/2017-12-04/"/>
    <id>http://blog.zhaochunqi.com/2017/12/04/2017-12-04/</id>
    <published>2017-12-04T15:04:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="# 问题" class="headerlink" title="问题"></a>问题 </h3><p>AKKA Stream 添加 fault tolerance。</p><p> 需要能够在出现简单问题的时候能够自动重启。出错原因要能够 Push 到 SQS</p><h3 id="解决方法"><a href="# 解决方法" class="headerlink" title="解决方法"></a>解决方法 </h3><p> 参考 AKKA Stream 中的记录的 fault tolerance 的方法来操作。</p><p><a href="https://doc.akka.io/docs/akka/2.5.5/scala/stream/stream-error.html" target="_blank" rel="noopener">https://doc.akka.io/docs/akka/2.5.5/scala/stream/stream-error.html</a></p><h3 id="记录解决过程"><a href="# 记录解决过程" class="headerlink" title="记录解决过程"></a>记录解决过程 </h3><ul><li><p> 使用 <code>recover</code> 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.recover(<span class="keyword">new</span> PFBuilder()</span><br><span class="line">.match(RuntimeException.class, ex -&gt; <span class="string">"stream truncated"</span>)</span><br><span class="line">.build()</span><br></pre></td></tr></table></figure><p>  这个方法好像不能获取到出错地方的具体信息，比如传入源的信息，这样我就没有办法把日志记录到 SQS 中了。</p></li><li><p>使用 <code>recoverWithRetries</code> 方法</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.recoverWithRetries(</span><br><span class="line"><span class="number">1</span>, <span class="comment">// max attempts</span></span><br><span class="line"><span class="keyword">new</span> PFBuilder()</span><br><span class="line">    .match(RuntimeException.class, ex -&gt; planB)</span><br><span class="line">    .build()</span><br></pre></td></tr></table></figure><p>  方法同上，问题也同上。</p></li><li><p>使用 <code>Delayed restarts with a backoff stage</code></p><p>  目前看起来这个有可能靠谱。</p><p>  但我还没理解这里面说的具体是什么意思。同时，我查看了这几个链接：</p><ul><li><p><a href="https://stackoverflow.com/questions/23773175/akka-java-fault-tolerance-and-actor-restarting" target="_blank" rel="noopener">https://stackoverflow.com/questions/23773175/akka-java-fault-tolerance-and-actor-restarting</a></p><p>这个 so 问答链接里面还是讲解了很多的关于 actor 问题的探讨，值得一看。</p></li><li><p><a href="http://danielwestheide.com/blog/2013/03/20/the-neophytes-guide-to-scala-part-15-dealing-with-failure-in-actor-systems.html" target="_blank" rel="noopener">http://danielwestheide.com/blog/2013/03/20/the-neophytes-guide-to-scala-part-15-dealing-with-failure-in-actor-systems.html</a></p><p>根据这个链接处理了 默认的 decider 方法。顺便看了 scala 关于 try catch 的一些特殊处理。 <a href="http://danielwestheide.com/blog/2012/12/26/the-neophytes-guide-to-scala-part-6-error-handling-with-try.html" target="_blank" rel="noopener">http://danielwestheide.com/blog/2012/12/26/the-neophytes-guide-to-scala-part-6-error-handling-with-try.html</a></p></li><li><p><a href="https://doc.akka.io/docs/akka/2.3.9/java/untyped-actors.html#Ask__Send-And-Receive-Future" target="_blank" rel="noopener">https://doc.akka.io/docs/akka/2.3.9/java/untyped-actors.html#Ask__Send-And-Receive-Future</a><br>这个链接主要是跟着上文的 SO 链接过来的，没看懂要表达什么。</p></li></ul></li><li><p>使用 <code>supervision strategy</code></p><p>  上面的链接用到了此方法。</p></li></ul><h3 id="记录此方法，思考是否有更好的解决方法"><a href="# 记录此方法，思考是否有更好的解决方法" class="headerlink" title="记录此方法，思考是否有更好的解决方法"></a>记录此方法，思考是否有更好的解决方法 </h3><p> 最终采用的代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> Function&lt;Throwable, Supervision.Directive&gt; decider = exc -&gt; &#123;</span><br><span class="line">    log.error(ExceptionUtils.getStackTrace(exc));</span><br><span class="line">    <span class="keyword">if</span>(exc <span class="keyword">instanceof</span> ActorInitializationException)&#123;</span><br><span class="line">        <span class="keyword">return</span> Supervision.stop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(exc <span class="keyword">instanceof</span> ActorKilledException) &#123;</span><br><span class="line">        <span class="keyword">return</span> Supervision.stop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Supervision.restart();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>OneForOneStrategy 这种好像在 Akka Stream 上不适用，默认就是 OneForOneStrategy ？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;# 问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题 &lt;/h3&gt;&lt;p&gt;AKKA Stream 添加 fault tolerance。&lt;/p&gt;&lt;p&gt; 需要能够在出现简单问题的时候能够自动重启。出错原因要能够 
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>通过 logbook 来提升编程技能</title>
    <link href="http://blog.zhaochunqi.com/2017/12/04/write_logs_use_logbooks/"/>
    <id>http://blog.zhaochunqi.com/2017/12/04/write_logs_use_logbooks/</id>
    <published>2017-12-04T14:08:00.000Z</published>
    <updated>2017-12-21T09:27:05.259Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文通过介绍了一种通过 logbook 的记录来提高自己编程技能的简便方法。</p></blockquote><a id="more"></a><p>这篇文章是我在看了 <a href="https://routley.io/tech/2017/11/23/logbook.html?utm_campaign=CodeTengu&amp;utm_medium=rss&amp;utm_source=CodeTengu_108" target="_blank" rel="noopener">Using a logbook to improve your programming</a> 的记录。</p><h2 id="记录原则"><a href="# 记录原则" class="headerlink" title="记录原则"></a>记录原则 </h2><p>logbook 记录有几个原则:</p><ol><li> 考虑你要解决的问题是什么？</li><li>描述你用来解决问题的办法。</li><li>描述你使用此方法的过程。</li><li>记录，并查看是否有更好的方案。</li></ol><h2 id="编程使用的优点"><a href="# 编程使用的优点" class="headerlink" title="编程使用的优点"></a>编程使用的优点 </h2><ol><li> 分解大问题为小问题。</li><li>很容易在分散精力之后重新回到工作状态。</li><li>可以从你的日志中快速学习。你可以查看你使用过的方法，然后了解哪些方法奏效，哪些无用。</li></ol><h2 id="快捷方法"><a href="# 快捷方法" class="headerlink" title="快捷方法"></a>快捷方法 </h2><p> 定义此方法到 <code>.zshrc</code> 中.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">lb</span></span>() &#123;</span><br><span class="line">    vim ~/logbook/$(date <span class="string">'+%Y-%m-%d'</span>).md</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考链接: </p><ul><li><a href="https://routley.io/tech/2017/11/23/logbook.html?utm_campaign=CodeTengu&amp;utm_medium=rss&amp;utm_source=CodeTengu_108" target="_blank" rel="noopener">https://routley.io/tech/2017/11/23/logbook.html?utm_campaign=CodeTengu&amp;utm_medium=rss&amp;utm_source=CodeTengu_108</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;本文通过介绍了一种通过 logbook 的记录来提高自己编程技能的简便方法。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>【2017-11-30】</title>
    <link href="http://blog.zhaochunqi.com/2017/11/30/2017-11-30/"/>
    <id>http://blog.zhaochunqi.com/2017/11/30/2017-11-30/</id>
    <published>2017-11-30T10:57:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 好看的皮囊千篇一律，有趣的思想万中无一。</p></blockquote><hr><blockquote><p> 看了 <a href="https://www.youtube.com/watch?v=5BVMaItQCRw&amp;t=58s" target="_blank" rel="noopener">https://www.youtube.com/watch?v=5BVMaItQCRw&amp;t=58s</a> 之后，分享给一堆人。都没有得到想要的反馈，难受。</p></blockquote><hr><blockquote><p> 测试一下 Latex 支持 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$</p></blockquote><hr><p>Love Live!!!</p><hr><p>$$\frac{\partial u}{\partial t}<br>= h^2 \left(\frac{\partial^2 u}{\partial x^2} +<br>\frac{\partial^2 u}{\partial y^2} +<br>\frac{\partial^2 u}{\partial z^2}\right)$$</p><hr><p> 谷歌出品的镜像对比工具，可以用来查看使用 pip, apt, rpm 之类安装的软件包 <a href="http://www.infoq.com/cn/news/2017/11/container-diff-images?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2017/11/container-diff-images?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global</a></p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start:&gt;http://www.google.com[blank]</span><br><span class="line">e=&gt;end:&gt;http://www.google.com</span><br><span class="line">op1=&gt;operation: My Operation</span><br><span class="line">sub1=&gt;subroutine: My Subroutine</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?:&gt;http://www.google.com</span><br><span class="line">io=&gt;inputoutput: catch something...</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op1</span><br></pre></td></tr></table></figure><hr><blockquote><p> 加上 Latex 和 FlowChart 两个支持，这个主题就完美了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt; 好看的皮囊千篇一律，有趣的思想万中无一。&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;&lt;blockquote&gt;&lt;p&gt; 看了 &lt;a href=&quot;https://www.youtube.com/watch?v=5BVMaItQCRw&amp;amp;t=58s&quot; 
      
    
    </summary>
    
      <category term="logbook" scheme="http://blog.zhaochunqi.com/categories/logbook/"/>
    
    
      <category term="dev" scheme="http://blog.zhaochunqi.com/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>使用 docker 进行 Minecraft 开服与备份</title>
    <link href="http://blog.zhaochunqi.com/2017/10/16/mincraft_in_docker/"/>
    <id>http://blog.zhaochunqi.com/2017/10/16/mincraft_in_docker/</id>
    <published>2017-10-16T10:18:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>没有什么事情，是跟好友一起玩游戏更快乐的了。去年怂恿老夏入了一套正版的 Minecraft 之后，就一直考虑如何联机一起搞。如今我们两个虽然不在一个城市了，但并不妨碍一起继续玩游戏。</p></blockquote><a id="more"></a><h2 id="目标"><a href="# 目标" class="headerlink" title="目标"></a>目标 </h2><p> 从我决定开服起，我就给自己定下了以下目标:</p><ol><li>简单。</li><li>安全。</li></ol><p>所谓简单，我想要的是配置简单。 而安全，则是数据的安全。 我不希望那一天我的服务器发生灾难性事故，我的 Minecraft 存档毁于一旦。</p><h2 id="行动"><a href="# 行动" class="headerlink" title="行动"></a>行动 </h2><p> 毫无疑问，docker 是我的第一选择。</p><p>经过一番考虑，我选择了使用 dropbox 备份我的数据，在开启 Minecraft 的 docker 镜像之前，先将 dropbox 镜像建立起来。</p><h3 id="创建 -dropbox-container"><a href="# 创建 -dropbox-container" class="headerlink" title="创建 dropbox container"></a>创建 dropbox container</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always --name=dropbox -v /home/zcq_qiqi/Dbox/Dropbox:/dbox/Dropbox -v /home/zcq_qiqi</span><br><span class="line">/Dbox/.dropbox:/dbox/.dropbox janeczku/dropbox</span><br></pre></td></tr></table></figure><p>使用 <code>docker logs mc</code> 查看日志进行 dropbox 绑定。</p><p><img src="media/UsersdeveloperDesktopScreen-Shot-2017-10-16-at-10.14.54-AM-1.jpg" alt=""></p><p>进入 Container ，将一些无用的文件夹进行排除</p><p><code>docker exec -t -i dropbox dropbox exclude add 1Password ithoughtsx Screenshots template Weekly\ Summary</code></p><p><strong>注: 1Password ithoughtsx Screenshots template Weekly\ Summary 是排除的文件夹，请根据个人的文件夹进行排除</strong></p><h3 id="创建 -Minecraft-Container"><a href="# 创建 -Minecraft-Container" class="headerlink" title="创建 Minecraft Container"></a>创建 Minecraft Container</h3><p>创建 minecraft 文件夹</p><p>在宿主机上执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Dbox/Dropbox</span><br><span class="line">mkdir minecraft</span><br></pre></td></tr></table></figure><p>启动 Container</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -v /home/zcq_qiqi/Dbox/Dropbox/minecraft/data:/data -e TYPE=FORGE -p 25565:25565 -e EULA=TRUE </span><br><span class="line">-e VERSION=1.12.1 --name mc itzg/minecraft-server</span><br></pre></td></tr></table></figure><p><strong>这里固定了版本在 1.12.1，不固定的话 Minecraft 上级之后会登录不上。</strong></p><h2 id="结束"><a href="# 结束" class="headerlink" title="结束"></a>结束 </h2><p> 只建立好了服务器只是第一步，如果你不想你的服务器被熊孩子乱搞的话，最好加一个白名单。</p><p>在 whitelist.json 中添加如下格式的用户信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;name&quot;: &quot;archieant&quot;,</span><br><span class="line"> &quot;uuid&quot;: &quot;7c20d813-631e-4e9b-a3f0-977dac8b284d&quot;</span><br><span class="line"> &#125;,</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;name&quot;: &quot;meihuayu&quot;,</span><br><span class="line"> &quot;uuid&quot;: &quot;a01e6c11-194d-41ca-a334-d6edbe25afc1&quot;</span><br><span class="line"> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>如果你想添加管理员权限, 在 ops.json 添加如下信息.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;uuid&quot;: &quot;a01e6c11-194d-41ca-a334-d6edbe25afc1&quot;,</span><br><span class="line"> &quot;name&quot;: &quot;meihuayu&quot;,</span><br><span class="line"> &quot;level&quot;: 4,</span><br><span class="line"> &quot;bypassesPlayerLimit&quot;: false</span><br><span class="line"> &#125;,</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;uuid&quot;: &quot;7c20d813-631e-4e9b-a3f0-977dac8b284d&quot;,</span><br><span class="line"> &quot;name&quot;: &quot;archieant&quot;,</span><br><span class="line"> &quot;level&quot;: 4,</span><br><span class="line"> &quot;bypassesPlayerLimit&quot;: false</span><br><span class="line"> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p> ​</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;没有什么事情，是跟好友一起玩游戏更快乐的了。去年怂恿老夏入了一套正版的 Minecraft 之后，就一直考虑如何联机一起搞。如今我们两个虽然不在一个城市了，但并不妨碍一起继续玩游戏。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://blog.zhaochunqi.com/tags/docker/"/>
    
      <category term="linux" scheme="http://blog.zhaochunqi.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>本周我学到了【2】</title>
    <link href="http://blog.zhaochunqi.com/2017/10/16/this_week_i_learned_2/"/>
    <id>http://blog.zhaochunqi.com/2017/10/16/this_week_i_learned_2/</id>
    <published>2017-10-16T09:47:00.000Z</published>
    <updated>2017-12-21T09:27:05.259Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周我学到了第二期！这一期后面的 3 分钟演讲值得一看！</p></blockquote><a id="more"></a><p>本周我学到了以下内容:</p><h2 id="学习"><a href="# 学习" class="headerlink" title="学习"></a>学习 </h2><ol><li> 本周在公司电脑上安装了一台 centos 7，发现了 Centos 已经移除了 ipconfig 命令，取而代之的是 iproute。 原因是 ipconfig 已经十几年没有人维护了。原来的命令也有了一些改变， 比如 查看网址可以 ip a 了，可以看下这篇文章来熟悉下。 <a href="https://www.linux.com/learn/replacing-ifconfig-ip" target="_blank" rel="noopener">https://www.linux.com/learn/replacing-ifconfig-ip</a></li><li><a href="https://zhaochunqi.com/2017/10/16/mincraft_in_docker/" target="_blank" rel="noopener">使用 docker 进行 Minecraft 开服与备份 </a> 这是我自己的博客文章，分享了使用 dropbox 镜像和 Minecraft 镜像来进行 Minecraft 开服和备份的操作。</li><li><a href="https://daily.zhihu.com/story/9456555" target="_blank" rel="noopener"> 招聘时的「N 年编程经验」，实际是在要求什么？</a> 我们经常在 jd 中看到关于编程经验的要求，可曾想过，他们想要的究竟是什么？知乎的这篇文章或许会给你一些答案。</li><li><a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="noopener">dockcloud 加速 </a> 国内的 docker 镜像基本没有办法下载，使用 dockcloud 加速，效果明显。</li></ol><h2 id="生活"><a href="# 生活" class="headerlink" title="生活"></a> 生活 </h2><ol><li><a href="https://www.zhihu.com/question/36225746/answer/140211009?utm_source=com.ideashower.readitlater.pro&amp;utm_medium=social" target="_blank" rel="noopener"> 在家装里，最划算的投入是什么？</a> 最近在看一些家装，翻看了好多类似的文章，这篇的东西很对我的胃口。</li><li><a href="http://liqi.io/sharing86/" target="_blank" rel="noopener">优秀的思想值得传播，他们推荐了这 9 个演讲</a> 这几个文章我还没来得及看，但肯定是要看的了。</li></ol><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1flzvpaggyfj31kw0tqkjl.jpg" alt="https://ws2.sinaimg.cn/large/006tNc79ly1flzvpaggyfj31kw0tqkjl.jpg"></p><p>​</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;本周我学到了第二期！这一期后面的3分钟演讲值得一看！&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="weekly" scheme="http://blog.zhaochunqi.com/categories/weekly/"/>
    
    
  </entry>
  
  <entry>
    <title>本周我学到了【1】</title>
    <link href="http://blog.zhaochunqi.com/2017/10/08/this_week_i_learned_1/"/>
    <id>http://blog.zhaochunqi.com/2017/10/08/this_week_i_learned_1/</id>
    <published>2017-10-08T09:45:00.000Z</published>
    <updated>2017-12-21T09:27:05.259Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本周我学到了第一期！</p></blockquote><a id="more"></a><h2 id="学习"><a href="# 学习" class="headerlink" title="学习"></a>学习 </h2><p>• <a href="https://android.jlelse.eu/7-reasons-this-android-code-style-improves-your-productivity-65d196fa55f" target="_blank" rel="noopener">7 reasons this Android Code Style improves your productivity</a></p><blockquote><p> 对于 Android 开发来说很有用的代码规范，是对默认的 Android Studio 提供的代码规范的一种改进。</p><p>支持 kotlin，我最喜欢的是 xml 中的 id 放在首行 </p><p> 安装使用非常简单，无需什么额外的学习成本 </p></blockquote><p>• <a href="https://sspai.com/post/41022" target="_blank" rel="noopener"> 给你 48 小时，能做出什么样的游戏？——Ludum Dare 限时游戏制作竞赛 </a></p><blockquote><p> 少数派的这篇文章简直给我打开了新世界的大门。</p><p>我对着文中提到的 B 站的文章看了一个小时。</p></blockquote><p>• <a href="https://youtu.be/7kVeCqQCxlk" target="_blank" rel="noopener">YOUTUBE:CSS Grid Changes EVERYTHING - Amazing Presentation</a></p><blockquote><p>厌烦了 HTML 中一层又一层的 div 来实现网页效果？</p><p>不使用 JavaScript 如何 Responsive Design？</p><p>试试 CSS Grid 吧，觉得兼容性不够为时尚早？— 世界上本没有路，走的人多了，也变成了路。</p><p>演讲者还提写了篇博客来介绍： <a href="https://www.smashingmagazine.com/2017/06/building-production-ready-css-grid-layout/" target="_blank" rel="noopener">Building Production-Ready CSS Grid Layouts Today</a></p></blockquote><h2 id="生活"><a href="# 生活" class="headerlink" title="生活"></a>生活 </h2><p>• <a href="https://daily.zhihu.com/story/9544475" target="_blank" rel="noopener"> 鲜辣开胃，香而不腻的蒜泥白肉，是最送饭的一道凉菜 </a></p><blockquote><p> 这道菜简直太对我的胃口了，简单易做。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;本周我学到了第一期！&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="weekly" scheme="http://blog.zhaochunqi.com/categories/weekly/"/>
    
    
  </entry>
  
  <entry>
    <title>一个 workflowy 的 Markdown 实时预览插件</title>
    <link href="http://blog.zhaochunqi.com/2017/03/02/workflowy-markdown-preivew-script/"/>
    <id>http://blog.zhaochunqi.com/2017/03/02/workflowy-markdown-preivew-script/</id>
    <published>2017-03-02T01:34:00.000Z</published>
    <updated>2017-12-21T09:27:05.259Z</updated>
    
    <content type="html"><![CDATA[<p>最近几个月已经成了 workflowy 的重度用户，然而在昨天（2017-03-01) 写文档的过程中发现没有 markdown 支持，写起来少了很多乐趣。</p><a id="more"></a><p>从网上找到了 <a href="https://greasyfork.org/zh-CN/scripts/27429-workflowy-commonmark-live-preview" target="_blank" rel="noopener">workflowy-commonmark-live-preview</a>这款插件，使用下来发现 <strong>markdown 预览渲染在下方，实际看起来很不方便</strong>。</p><p> 所以我就自己改了一个。</p><p>效果如下：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1flzgnwla5cg312i0jeb29.gif" alt="http://harchiko.qiniudn.com/markdown-script-preview.gif"></p><p>下载链接： <a href="https://greasyfork.org/zh-CN/scripts/27784-workflowy-markdown-live-preview" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts/27784-workflowy-markdown-live-preview</a> 欢迎试用并提出宝贵意见。</p><p>困死了，去睡觉。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近几个月已经成了 workflowy 的重度用户，然而在昨天（2017-03-01) 写文档的过程中发现没有 markdown 支持，写起来少了很多乐趣。&lt;/p&gt;
    
    </summary>
    
    
      <category term="workflowy" scheme="http://blog.zhaochunqi.com/tags/workflowy/"/>
    
  </entry>
  
  <entry>
    <title>微信推送从未如此简单 --Server 酱</title>
    <link href="http://blog.zhaochunqi.com/2016/12/30/simple_wechat_push/"/>
    <id>http://blog.zhaochunqi.com/2016/12/30/simple_wechat_push/</id>
    <published>2016-12-30T02:51:00.000Z</published>
    <updated>2017-12-21T09:27:05.255Z</updated>
    
    <content type="html"><![CDATA[<p>有一个非常简单的需求，每天查看一下以太坊的价格动向。</p><a id="more"></a><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1flzgswqwrej30jz0zk40d.jpg" alt="http://harchiko.qiniudn.com/WechatIMG27.jpeg"></p><h2 id="方法"><a href="# 方法" class="headerlink" title="方法"></a>方法 </h2><p> 以太坊价格通过查询 YUNBI 的 API 知道: <a href="https://yunbi.com/api/v2/tickers/ethcny.json" target="_blank" rel="noopener">https://yunbi.com/api/v2/tickers/ethcny.json</a> 可以得到。</p><p>推送用到工具 Server 酱， Server 酱用起来实在是太方便了，一个 get 请求，信息就直接推送到微信上了。</p><p>直接向 <code>http://sc.ftqq.com/[SCKEY(登入后可见)].send</code> 发送 GET 请求即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">接受两个参数：</span><br><span class="line"></span><br><span class="line">text：消息标题，最长为 256，必填。</span><br><span class="line">desp：消息内容，最长 64Kb，可空，支持 MarkDown。</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="# 代码" class="headerlink" title="代码"></a>代码 </h2><p> 使用 Python 来写:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">'https://yunbi.com:443/api/v2/tickers/ethcny.json'</span>)</span><br><span class="line"></span><br><span class="line">json = r.json()</span><br><span class="line"></span><br><span class="line">ticker = json[<span class="string">'ticker'</span>]</span><br><span class="line">sell = ticker[<span class="string">'sell'</span>]</span><br><span class="line">buy = ticker[<span class="string">'buy'</span>]</span><br><span class="line">last = ticker[<span class="string">'last'</span>]</span><br><span class="line">vol = ticker[<span class="string">'vol'</span>]</span><br><span class="line">high = ticker[<span class="string">'high'</span>]</span><br><span class="line">low = ticker[<span class="string">'low'</span>]</span><br><span class="line"></span><br><span class="line">price =  <span class="string">u"* 最高:"</span>+high+<span class="string">u"\n* 最低:"</span>+low+<span class="string">u"\n* 卖价:"</span>+sell+<span class="string">u"\n* 买价:"</span>+buy+<span class="string">u"\n* 上次成交:"</span>+last+<span class="string">u"\n* 成交量:"</span>+vol</span><br><span class="line"></span><br><span class="line">payload = &#123;<span class="string">'text'</span>:<span class="string">u'以太坊最新价格'</span>, <span class="string">'desp'</span>: price&#125;</span><br><span class="line">requests.get(<span class="string">'http://sc.ftqq.com/[Your Own Token].send'</span>, params=payload)</span><br></pre></td></tr></table></figure><p>需要安装下 python requests 包</p><p><code>pip install requests</code></p><p>设置下 crontab 任务，这样每天就可以推送价格了。</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1flzgt07evyj30jz0zk75i.jpg" alt="http://harchiko.qiniudn.com/WechatIMG26.jpeg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有一个非常简单的需求，每天查看一下以太坊的价格动向。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://blog.zhaochunqi.com/tags/python/"/>
    
  </entry>
  
</feed>
